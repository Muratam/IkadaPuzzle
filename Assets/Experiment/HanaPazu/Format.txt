(H=10，W=14)
H W
table
unit1
...
unitN
table:H
 "#":壁 "R":赤花 "B":青花 "Y":黄花 それ以外:"."
左上:(0,0) 右向きにX座標で正，下向きにY座標で正の向き
unit:交換で移動するもの :  S A B C D  

S R R 2 2
B 1 4 2 1

S ="S" : 色Aの種 向きBに花が咲く，Y座標 C，X座標 D
       : 向き : "U","R","L","D"
S ="B" :ブロック : 左上がY座標がA，X座標がBの位置に配置されており，高さ C，幅 D
出力形式
Y1 X1
...
YC XC
これは，i回目の交換で(Xi,Yi)と(Xi + 1,Yi)を交換することを意味する．

評価
シミュレーションは以下のアルゴリズムで行われる．このシミュレーションの方法は実際のハナノパズルと若干異なるが，全てのステージについてこのシミュレーション方法でも解が存在することが保証されている．
score: = 0
for (a,b) in 出力データ do
    aとbが交換できないならば，エラーを返して終了
    aとbを交換
    score: = score + 10
    while 宙に浮いているユニットが存在する or 花と隣接している種が存在する do
        score: = score +各ユニットの落下した段数の最大値× 2
        宙に浮いているユニット全ての落下処理
        if 花と隣接している種が存在する then
            score: = score + 35
        花と隣接している全ての種を開花処理し，それに伴ってユニットを移動する．複数の花が咲くことで矛盾が生じる場合は，下から順に，それも同じときは左から順に優先的に開花処理を行う
if まだ開花していない種が存在する then
    エラーを返して終了
return score
  
入力例
10 14
##############
####.##....###
##.#.##..R.###
##....#..#####
###..##..#####
#.....#..#####
#.......######
#R.##...######
#######B######
##############

B 1 4 2 1
S R R 2 2
B 3 2 1 1
B 3 4 1 2
S R U 4 8
B 5 7 1 2
S B U 6 6
S B U 7 6
	
出力例
3 4
3 2
3 3
5 2
3 2
3 4
5 4
6 3
5 2
5 1
  
与えられる入力はすべて端が壁で囲まれていますか
    壁，もしくは花で囲まれています 

